number:
  text: number
identifier:
  text: identifier
file.type.description:
  text: Velocity template files
expression.expected:
  text: Expression expected
variable.name.expected:
  text: Variable name expected
tab.structureview.vtl.view:
  text: Velocity view
velocity.inspections.group:
  text: Velocity inspections
vtl.welformedness.inspection:
  text: Welformedness inspection
vtl.references.inspection:
  text: References inspection
vtl.types.inspection:
  text: Types inspection
vtl.directive.args.inspection:
  text: 'Directive arguments inspection '
vtl.file.references.inspection:
  text: File references inspection
error.cannot.resolve.variable:
  text: Cannot resolve variable ''{0}''
error.cannot.resolve.property:
  text: Cannot resolve property ''{0}'' of class ''{1}''
error.cannot.resolve.method:
  text: Cannot resolve method ''{0}'' of class ''{1}''
error.no.applicable.method:
  text: There is no method ''{0}'' in ''{1}'' applicable to {2}
error.cannot.resolve.macro:
  text: Cannot resolve macro ''{0}''
error.wrong.number.of.arguments.for.macro:
  text: Call of ''{0}'' with wrong number of arguments
unclosed.directive:
  text: Unclosed directive
add.implicit.variable.fix.name:
  text: Define implicit variable in comment
add.implicit.variable.fix.name.local:
  text: Define implicit variable (in comment in current file)
add.implicit.variable.fix.name.external:
  text: Define implicit variable externally (for this file only)
add.implicit.variable.fix.name.module.wide:
  text: Define implicit variable externally (module-wide)
add.macro.library.ref.fix.name:
  text: Define macro library reference in comment
add.macro.library.ref.fix.name.local:
  text: Define macro library reference (in comment in current file)
add.macro.library.ref.fix.name.external:
  text: Define macro library reference externally (for this file only)
add.macro.library.ref.fix.name.module.wide:
  text: Define macro library reference externally (module-wide)
add.velocity.properties.ref.fix.name:
  text: Define velocity.properties file reference in comment
add.velocity.properties.ref.fix.name.local:
  text: Define velocity.properties file reference (in comment in current file)
add.velocity.properties.ref.fix.name.external:
  text: Define velocity.properties file reference externally (for this file only)
add.velocity.properties.ref.fix.name.module.wide:
  text: Define velocity.properties file reference externally (module-wide)
invalid.token:
  text: Invalid token ''{0}''
token.expected:
  text: '''''{0}'''' expected'
parameter.expected:
  text: Parameter declaration expected
operand.expected:
  text: Operand expected
loop.variable.expected:
  text: Loop variable expected
defined.variable.expected:
  text: Defined variable expected
type.name.variable:
  text: variable
type.name.loop.variable:
  text: loop variable
type.name.macro.parameter:
  text: macro parameter
type.name.macro:
  text: macro
argument.list.expected:
  text: Argument list expected
macro.declaration.expected:
  text: Macro name and parameter list expected
operation.not.allowed:
  text: Operation is not allowed
vtl.formal.notation.is.not.allowed:
  text: Formal notation is not allowed here
vtl.break.should.be.within.foreach:
  text: '#BREAK directive should be within #FOREACH directive'
vtl.only.first.parse.argument.will.be.parsed:
  text: 'Only first file will be parsed within #parse'
invalid.operand.type:
  text: 'Invalid type of the operand: ''''{0}'''''
invalid.operands.type:
  text: 'Invalid types of the operands: ''''{0}'''' and ''''{1}'''''
invalid.java.type:
  text: Invalid Java type
illegal.iterable.expression.type:
  text: 'Iillegal iterable expression type: ''''{0}'''''
macro.is.already.defined:
  text: Macro ''{0}'' is already defined in ''{1}''
duplicated.parameter.name:
  text: Duplicated parameter name ''{0}''
macro.declaration.will.be.ignored:
  text: Macro ''{0}'' is already defined in ''{1}'' and will be ignored in ''{2}''
choose.external.definitions.file:
  text: Choose external implicit variable definitions file
will.be.considered.as.macro.call:
  text: Will be considered as macro call, '(' expected
assignment.to.method.call:
  text: Assignment to method call has no effect
assignment.of.void:
  text: Assignment of void has no effect
velocity.color.dot:
  text: Dot
velocity.color.parenths:
  text: Parentheses
velocity.color.brackets:
  text: Brackets
velocity.color.braces:
  text: Braces
velocity.color.operation.sign:
  text: Operation sign
velocity.color.string:
  text: String literal
velocity.color.escape:
  text: Escape character
velocity.color.number:
  text: Number literal
velocity.color.keyword:
  text: Keyword
velocity.color.comma:
  text: Comma
velocity.color.semicolon:
  text: Semicolon
velocity.color.directive:
  text: Built-in directive
velocity.color.reference:
  text: Reference and macro call
velocity.color.comment:
  text: Comment
velocity.color.bad.character:
  text: Bad character
velocity.color.scripting.background:
  text: Scripting background
